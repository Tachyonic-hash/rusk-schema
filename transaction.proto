syntax = "proto3";
package rusk;
option go_package = "github.com/dusk-network/rusk-schema;rusk";

import "basic_fields.proto";
import "keys.proto";

message Crossover {
    JubJubCompressed value_comm = 1;
    BlsScalar nonce = 2;
    PoseidonCipher encypted_data = 3;
}
message Fee {
    uint64 gas_limit = 1;
    uint64 gas_price = 2;
    JubJubCompressed R = 3;
    JubJubCompressed pk_r = 4;
}

message Note {
    int32 note_type = 1;
    JubJubCompressed value_commitment = 2;
    JubJubScalar nonce = 3;
    StealthAddress pk_r = 4;
    fixed64 pos = 5;
    PoseidonCipher encrypted_data = 6;
}

message TransactionPayload {
    BlsScalar anchor = 1;
    repeated BlsScalar nullifier = 2;
    Crossover crossover = 3;
    repeated Note notes = 4;
    Fee fee = 5;
    Proof spending_proof = 6;
    bytes call_data = 7;
}

message Transaction {
    uint32 version = 1;
    uint32 type = 2;
    TransactionPayload tx_payload = 3;
}
