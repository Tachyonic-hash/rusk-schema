syntax = "proto3";
package rusk;

import "basic_fields.proto";
import "transaction.proto";
import "keys.proto";

message GenerateScoreRequest {
    BlsScalar seed = 1;
    JubJubCompressed secret_key = 2; 
    uint32 round = 3;
    uint32 step = 4;
}

message GenerateScoreResponse {
    Proof blindbid_proof = 1;
    BlsScalar score = 2;
    BlsScalar prover_identity = 4;
}

message VerifyScoreRequest {
    Proof proof = 1;
    BlsScalar score = 2;
    BlsScalar seed = 3;
    BlsScalar identity = 4;
    fixed64 round = 5;
    uint32 step = 6;
}

message VerifyScoreResponse {
    bool success = 1;
}
service BlindBid {
    // Generate a proof of blind bid, and a score.
    rpc GenerateScore(GenerateScoreRequest) returns (GenerateScoreResponse) {}
    // Verify a proof of blind bid, and the associated score.
    rpc VerifyScore(VerifyScoreRequest) returns (VerifyScoreResponse) {}
}
